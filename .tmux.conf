unbind C-b
set -g prefix C-q
bind C-q send-prefix

# VI-like pane movements
set -g mode-keys vi
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

set -g allow-rename on
set-option -g history-limit 50000
set -g set-clipboard on
set-option -g display-time 3000
set -g display-panes-time 3000
set -g "window-style" "bg=default"
set -g "window-active-style" "bg=default"

# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

setw -g mode-keys vi
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# -- end Linux only

set -sg escape-time 0

# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0


# my status line configurations
# set -g status-bg black
set -g status-style bg=default
set -g status-fg colour240
# set -g status-fg "#ffffff"
set -g status-left-length 30
set -g status-right-length 100
set -g status-left '#[fg=#E9AD0C]▊  #H | '
set -g status-right "#[fg=#E9AD0C] |#[fg=#E9AD0C] %A, %d %b %Y  | %H:%M   ▊"
set -g window-status-current-format " #[bg=#E9AD0C, fg=colour7, bold] #I #W #[default]"
# set -g pane-border-style 'fg=#0099b0,bg=default'
# set -g pane-active-border-style 'fg=#03dbfc,bg=default'
set -g pane-border-style 'fg=#403d52,bg=default'
set -g pane-active-border-style 'fg=#403d52,bg=default'

# set -g default-terminal "tmux-256color"
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -g focus-events on

# Toggle status bar background color
set-option -g default-shell /bin/bash
bind-key C-f run-shell "tmux show-option -gq status-style | grep -q 'bg=default' && tmux set-option -gq status-style bg="#181825" || tmux set-option -gq status-style bg=default; tmux refresh-client -S"

# toggle status bar on and off
bind-key v set-option -g status

# lazygit
bind-key g new-window -c "#{pane_current_path}" "lazygit"
# yazi
bind-key y new-window -c "#{pane_current_path}" "yazi"
# bind-key y display-popup -w 90% -h 90% -d "#{pane_current_path}" -E "yazi"
# bind-key o new-window -c "~/" "bash -c 'file=\$(fzf); [[ -n \"\$file\" ]] && xdg-open \"\$file\"'"
# porsmo
# bind-key P new-window -c "#{pane_current_path}" "porsmo"
bind-key P run-shell 'tmux split-window -v -c "#{pane_current_path}" -P -F "#{pane_id}" "porsmo p l" | xargs -I {} tmux resize-pane -t {} -Z'

# toggle transparent background
bind-key C-b run-shell "bash -ic 'source ~/.bashrc; toggle_transparent_background'"

# glow
# bind-key Y new-window -c "#{pane_current_path}" "glow"
# bind-key y new-window -c "#{pane_current_path}" "cd ~/notes/ && glow"

# toggle to the next pane and zoom
bind -r a select-pane -t .+1 \;  resize-pane -Z

# attach to current session
bind-key F display-popup -w 90% -h 85% -d "#{pane_current_path}" -E "tmux new-session -A -s bash"
bind-key f display-popup -w 90% -h 90% -d "#{pane_current_path}" -E

# Set new panes and windows to open in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Hide tmux if there's only one window
# if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
# set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
# set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'

# vim tmux navigate
version_pat='s/^tmux[^0-9]*([.0-9]+).*/\1/p'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
tmux_version="$(tmux -V | sed -En "$version_pat")"
setenv -g tmux_version "$tmux_version"

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
  "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
  "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-\\ select-pane -l

# yazi: requires tmux 3.3 for allow-passthrough
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# List of plugins
 # set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'tmux-plugins/tmux-cowboy' # kill with <prefix> + *

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
